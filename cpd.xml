<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
<duplication lines="34" tokens="163">
<file line="56" path="/home/steven/fspotcloud/server/src/main/java/fspotcloud/server/control/task/photodelete/DeletePhotosHandler.java"/>
<file line="59" path="/home/steven/fspotcloud/server/src/main/java/fspotcloud/server/control/task/photoremove/RemovePhotosFromTagHandler.java"/>
<codefragment>
<![CDATA[
			Iterator<PhotoRemovedFromTag> it) {
		Photo photo = photos.getById(key);
		if (photo != null) {
			boolean moreImports = false;
			for (String tagId : photo.getTagList()) {
				Tag tagRelated = tagManager.getById(tagId);
				if (tagRelated != null) {
					if (!deleteTagId.equals(tagId)) {
						if (tagRelated.isImportIssued()) {
							moreImports = true;
							break;
						}
					}
				}
			}
			if (!moreImports) {
				photos.delete(key);
				tag.getCachedPhotoList().remove(find(tag.getCachedPhotoList(), key));
			}
		}
		it.remove();
		
	}

	private PhotoInfo find(SortedSet<PhotoInfo> set, String id) {
		for(PhotoInfo info: set) {
			if (info.getId().equals(id)) {
				return info;
			}
		} 
		return null;
	}

}
]]>
</codefragment>
</duplication>
<duplication lines="26" tokens="135">
<file line="27" path="/home/steven/fspotcloud/bot-dispatch/integration-test/src/main/java/fspotcloud/botdispatch/testserver/TestServlet.java"/>
<file line="23" path="/home/steven/fspotcloud/taskqueue-dispatch/integration/src/main/java/fspotcloud/taskqueuedispatch/integration/test/TestServlet.java"/>
<codefragment>
<![CDATA[
	TaskQueueDispatch dispatch;
	
	@SuppressWarnings("rawtypes")
	@Inject
	List results;

	@Override
	public void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String name = request.getParameter("name");
		if (name != null) {
			dispatch.execute(new TestAction(name), new TestCallback());
		}
		String second = request.getParameter("second");
		if (second != null) {
			dispatch.execute(new SecondAction(second), new TestCallback());
		}
		OutputStream out = response.getOutputStream();
		PrintWriter p = new PrintWriter(out);
		p.write(outputHTML());
		p.close();
		out.close();
	}

	private String outputHTML() {
		String result = "<html><h1>TaskQueueDispatch Test Servlet</h1><div>";
]]>
</codefragment>
</duplication>
<duplication lines="24" tokens="107">
<file line="10" path="/home/steven/fspotcloud/bot-dispatch/test-bot/src/main/java/fspotcloud/botdispatch/testbot/StopListener.java"/>
<file line="10" path="/home/steven/fspotcloud/peer/src/main/java/fspotcloud/peer/StopListener.java"/>
<codefragment>
<![CDATA[
public class StopListener extends Thread {

	final static private Logger log = Logger.getLogger(StopListener.class.getName());
	final int stopPort;
	private ServerSocket server;

	@Inject
	public StopListener(@Named("stop port") int port) {
		this.stopPort = port;
	}

	public void run() {
		try {
			server = new ServerSocket(stopPort);
			server.accept();
		} catch (IOException e) {
			log.warning("Could not listen on port " + stopPort);
			log.warning("Aborting on request");
			System.exit(-1);
		}
		System.exit(0);
	}

}
]]>
</codefragment>
</duplication>
</pmd-cpd>